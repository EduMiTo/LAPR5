@startuml

autonumber
actor "GL" as GL
participant "RoutePlanningComponent" as COMP
participant "RoutePlanningService" as SS
participant "planeamento \n PLANEAMENTO" as MDL
participant "PlanningRoute" as ROUTE
participant "PlanningController" as CTR
participant "PlanningService" as SERVICE
participant "Planning" as Path
participant "PlanningRepo" as REPO
participant "PlanningMap" as MAP
participant "PlanningDTO" as DTO
database "Database" as DB

GL-> COMP :  introduces the data(plate,date,type)
activate COMP
COMP -> COMP : createRoutePlanning(plate,date,type)
activate COMP
COMP -> SS : postPlanByPlateAndDate(plate,date,type)
activate SS
SS -> MDL: post(/Plannings)
activate MDL
MDL -> ROUTE : post
activate ROUTE
ROUTE -> CTR : performPlanning(truckPlate,\nplanningDate,path,planningTime,heuristic)
activate CTR
note left
  The parameters sent in the method are inserted in the request body
end note
deactivate MDL
CTR -> SERVICE : performPlanning
activate SERVICE
SERVICE -> Path** : create
SERVICE -> REPO : save
activate REPO

REPO -> REPO : findByPlateAndDate(truckPlate, date)
note left
  get request to PLANEAMENTO
end note
activate REPO
deactivate REPO
REPO -> MAP : toPersistence(planning)
activate MAP
deactivate MAP
REPO -> DB : create
activate DB
deactivate DB
REPO -> MAP : toDomain
activate MAP
deactivate MAP
REPO --> SERVICE
deactivate REPO
SERVICE -> DTO : toDTO(planning)
activate DTO
deactivate DTO
alt success
SERVICE --> CTR : ok
CTR --> ROUTE : status 201
ROUTE -->  SS : operation success
deactivate MDL
SS --> COMP : operation success
GL<-- COMP : displays success message
else

SERVICE --> CTR : error message
deactivate SERVICE
CTR --> ROUTE : status 400
deactivate CTR
ROUTE -->  SS : operation failure
deactivate ROUTE
deactivate MDL
deactivate CTR
SS --> COMP : operation failure
deactivate ROUTE
deactivate SS
GL<-- COMP : displays failure message
end

@enduml