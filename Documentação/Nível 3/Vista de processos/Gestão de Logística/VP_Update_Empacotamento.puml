@startuml

autonumber
actor "GL" as GL
participant "PackingComponent" as COMP
participant "PackingServiceService" as SS
participant "MDL" as MDL
participant "PackingRoute" as ROUTE
participant "PackingController" as CTR
participant "PackingService" as SERVICE
participant "Packing" as Path
participant "PackingRepo" as REPO
participant "PackingSchema" as SCHEMA
participant "PackingMap" as MAP
participant "PackingDTO" as DTO
database "Database" as DB
participant "packing\n:Packing" as path
participant "packingDocument" as DOC

GL-> COMP : introduces the data(truckPlate,deliveryId,position)
activate COMP
COMP -> COMP : updatePacking(truckPlate,deliveryId,position)
activate COMP
COMP -> SS : updatePacking(packing)
activate SS
SS -> MDL : put(/Packings)
activate MDL
MDL -> ROUTE : put
activate ROUTE
ROUTE -> CTR : updatePacking
activate CTR
CTR -> SERVICE : updatePackings
activate SERVICE
SERVICE -> REPO : packing = findByDomainId
activate REPO
deactivate REPO
SERVICE -> path : updates data
activate path
deactivate path
SERVICE -> REPO : save
activate REPO
REPO -> SCHEMA : packingDocument = findOne
activate SCHEMA
deactivate SCHEMA
REPO -> MAP : isValid
activate MAP
alt !isValid
MAP --> REPO: error message
deactivate MAP
SERVICE <--REPO : error message
CTR <-- SERVICE : error message
ROUTE <-- CTR : status 400
MDL <-- ROUTE : failure message
MDL --> SS : failure message
SS -> COMP : failure message
GL<-- COMP : display failure message
end
deactivate MAP
REPO -> DOC : updates data
activate DOC
deactivate DOC
REPO -> DB : save
activate DB
deactivate DB 
REPO --> SERVICE : packingResult
deactivate REPO
SERVICE -> DTO : toDTO
activate DTO
deactivate DTO
SERVICE --> CTR : ok
deactivate SERVICE
alt success
CTR --> ROUTE : status 200
deactivate CTR
ROUTE --> MDL : display success message
deactivate ROUTE
MDL --> SS : display success message
deactivate MDL
SS --> COMP : display success message
deactivate SS
deactivate MDL
GL<-- COMP : display success message

@enduml